extends ../layout

block content
  div(class="container mx-auto px-4 py-6")
    if task && project
      div(class="flex items-center mb-6")
        a(href=`/pm/projects/${project.id}/tasks/${task.id}` class="mr-4 text-indigo-600 hover:text-indigo-800")
          i(class="bx bx-arrow-back text-xl")
        h1(class="text-3xl font-bold") Edit Task
      
      div(class="bg-white rounded-lg shadow-md p-6" data-aos="fade-up")
        form(action=`/pm/projects/${project.id}/tasks/${task.id}/edit` method="POST")
          div(class="grid grid-cols-1 md:grid-cols-2 gap-6")
            div(class="mb-4")
              label(for="name" class="block text-sm font-medium text-gray-700 mb-1") Task Name *
              input(type="text" id="name" name="name" value=task.name required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500")
            
            div(class="mb-4")
              label(for="assigned_to" class="block text-sm font-medium text-gray-700 mb-1") Assign To
              select(id="assigned_to" name="assigned_to" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500")
                option(value="") -- Select Team Member --
                if members && members.length > 0
                  each member in members
                    option(value=member.id selected=task.assigned_to === member.id) #{member.fullname}
                else
                  option(value="" disabled) No team members available
            
            div(class="mb-4")
              label(for="priority" class="block text-sm font-medium text-gray-700 mb-1") Priority *
              select(id="priority" name="priority" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500")
                option(value="low" selected=task.priority === 'low') Low
                option(value="medium" selected=task.priority === 'medium') Medium
                option(value="high" selected=task.priority === 'high') High
            
            div(class="mb-4")
              label(for="status" class="block text-sm font-medium text-gray-700 mb-1") Status *
              select(id="status" name="status" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500")
                option(value="pending" selected=task.status === 'pending') Pending
                option(value="in_progress" selected=task.status === 'in_progress') In Progress
                option(value="completed" selected=task.status === 'completed') Completed
            
            div(class="mb-4")
              label(for="start_date" class="block text-sm font-medium text-gray-700 mb-1") Start Date
              - const startDate = task.start_date ? new Date(task.start_date).toISOString().split('T')[0] : ''
              input(type="date" id="start_date" name="start_date" value=startDate class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500")
            
            div(class="mb-4")
              label(for="due_date" class="block text-sm font-medium text-gray-700 mb-1") Due Date
              - const dueDate = task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : ''
              input(type="date" id="due_date" name="due_date" value=dueDate class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500")
            
            div(class="mb-4 md:col-span-2")
              label(for="description" class="block text-sm font-medium text-gray-700 mb-1") Description *
              textarea(id="description" name="description" rows="4" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500") #{task.description}
            
            div(class="mb-4 md:col-span-2")
              label(for="progress" class="block text-sm font-medium text-gray-700 mb-1") Progress (%)
              input(type="range" id="progress" name="progress" min="0" max="100" value=task.progress class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer")
              div(class="flex justify-between text-xs text-gray-500 mt-1")
                span 0%
                span(id="progress-value") #{task.progress}%
                span 100%
          
          div(class="mt-6 flex justify-between")
            a(href=`/pm/projects/${project.id}/tasks/${task.id}/delete` class="bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded-lg flex items-center" onclick="return confirm('Are you sure you want to delete this task?')")
              i(class="bx bx-trash mr-2")
              span Delete Task
            
            div
              a(href=`/pm/projects/${project.id}/tasks/${task.id}` class="bg-gray-200 hover:bg-gray-300 text-gray-700 py-2 px-4 rounded-lg mr-2") Cancel
              button(type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-lg") Save Changes
    else
      div(class="text-center py-8")
        p(class="text-gray-500 mb-4") Task not found
        a(href="/pm/projects" class="text-indigo-600 hover:text-indigo-800") Back to Projects

block scripts
  script.
    document.addEventListener('DOMContentLoaded', function() {
      const progressSlider = document.getElementById('progress');
      const progressValue = document.getElementById('progress-value');
      
      if (progressSlider && progressValue) {
        progressSlider.addEventListener('input', function() {
          progressValue.textContent = this.value + '%';
        });
      }
    }); 