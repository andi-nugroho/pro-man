extends ../layout

block content
  div(class="container mx-auto px-4 py-6")
    if task && project
      input(type="hidden" id="task-id" value=task.id)
      
      div(class="flex items-center mb-6")
        a(href=`/pm/projects/${project.id}` class="mr-4 text-indigo-600 hover:text-indigo-800")
          i(class="bx bx-arrow-back text-xl")
        h1(class="text-3xl font-bold") #{task.name}
      
      div(class="flex flex-wrap gap-2 mb-6")
        a(href=`/pm/projects/${project.id}/tasks/${task.id}/edit` class="bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-lg flex items-center")
          i(class="bx bx-edit mr-2")
          span Edit Task
      
      div(class="bg-white rounded-lg shadow-md p-6 mb-6" data-aos="fade-up")
        div(class="grid grid-cols-1 md:grid-cols-2 gap-6")
          div
            h2(class="text-xl font-semibold mb-4") Task Details
            div(class="space-y-3")
              div
                span(class="text-gray-500") Project:
                a(href=`/pm/projects/${project.id}` class="ml-2 text-indigo-600") #{project.name}
              
              div
                span(class="text-gray-500") Status:
                if task.status === 'pending'
                  span(class="ml-2 px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800") Pending
                else if task.status === 'in_progress'
                  span(class="ml-2 px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800") In Progress
                else
                  span(class="ml-2 px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800") Completed
              
              div
                span(class="text-gray-500") Priority:
                if task.priority === 'high'
                  span(class="ml-2 px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800") High
                else if task.priority === 'medium'
                  span(class="ml-2 px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800") Medium
                else
                  span(class="ml-2 px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800") Low
              
              div
                span(class="text-gray-500") Assigned to:
                if task.assignee_name
                  div(class="flex items-center mt-1")
                    if task.assignee_avatar
                      img(src=task.assignee_avatar alt=task.assignee_name class="h-6 w-6 rounded-full mr-2")
                    else
                      div(class="h-6 w-6 rounded-full bg-indigo-100 text-indigo-500 flex items-center justify-center mr-2")
                        i(class="bx bx-user text-xs")
                    span #{task.assignee_name}
                else
                  span(class="ml-2 text-gray-500") Unassigned
              
              div
                span(class="text-gray-500") Created by:
                span(class="ml-2") #{task.creator_name}
              
              div
                span(class="text-gray-500") Start date:
                span(class="ml-2") #{task.start_date ? new Date(task.start_date).toLocaleDateString() : 'Not set'}
              
              div
                span(class="text-gray-500") Due date:
                if task.due_date
                  - const dueDate = new Date(task.due_date)
                  - const today = new Date()
                  - const isOverdue = dueDate < today && task.status !== 'completed'
                  span(class=`ml-2 ${isOverdue ? 'text-red-600 font-medium' : ''}`) #{dueDate.toLocaleDateString()}
                  if isOverdue
                    span(class="ml-1 text-xs text-red-600") (Overdue)
                else
                  span(class="ml-2") Not set
              
              div
                span(class="text-gray-500") Description:
                p(class="mt-1 text-gray-700") #{task.description}
          
          div
            h2(class="text-xl font-semibold mb-4") Progress
            div(class="mb-2 flex justify-between")
              span Progress
              span #{task.progress}%
            div(class="w-full bg-gray-200 rounded-full h-2.5 mb-4")
              div(class="bg-indigo-600 h-2.5 rounded-full" style=`width: ${task.progress}%`)
            
            form(action=`/pm/tasks/${task.id}/progress` method="POST" class="mt-6")
              h3(class="text-lg font-medium mb-2") Update Progress
              div(class="mb-4")
                label(for="progress" class="block text-sm font-medium text-gray-700 mb-1") Progress (%)
                input(type="range" id="progress" name="progress" min="0" max="100" value=task.progress class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer task-progress-input" data-task-id=task.id)
                div(class="flex justify-between text-xs text-gray-500 mt-1")
                  span 0%
                  span(id="progress-value") #{task.progress}%
                  span 100%
              
              button(type="submit" class="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-lg") Update Progress
            
            form(action=`/pm/tasks/${task.id}/status` method="POST" class="mt-6")
              h3(class="text-lg font-medium mb-2") Update Status
              div(class="mb-4")
                select(id="status" name="status" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 task-status-select" data-task-id=task.id)
                  option(value="pending" selected=task.status === 'pending') Pending
                  option(value="in_progress" selected=task.status === 'in_progress') In Progress
                  option(value="completed" selected=task.status === 'completed') Completed
              
              button(type="submit" class="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-lg") Update Status
      
      div(class="bg-white rounded-lg shadow-md p-6" data-aos="fade-up" data-aos-delay="100")
        h2(class="text-xl font-semibold mb-4") Comments
        
        if comments && comments.length > 0
          div(class="space-y-4 mb-6")
            each comment in comments
              div(class="border-b border-gray-200 pb-4")
                div(class="flex items-start")
                  if comment.avatar
                    img(src=comment.avatar alt=comment.fullname class="h-10 w-10 rounded-full mr-3")
                  else
                    div(class="h-10 w-10 rounded-full bg-indigo-100 text-indigo-500 flex items-center justify-center mr-3")
                      i(class="bx bx-user")
                  
                  div(class="flex-1")
                    div(class="flex justify-between items-center mb-1")
                      div(class="font-medium") #{comment.fullname}
                      div(class="text-xs text-gray-500") #{new Date(comment.created_at).toLocaleString()}
                    
                    p(class="text-gray-700") #{comment.content}
        else
          p(class="text-gray-500 mb-6") No comments yet
        
        form(action=`/pm/projects/${project.id}/tasks/${task.id}/comment` method="POST")
          h3(class="text-lg font-medium mb-2") Add Comment
          div(class="mb-4")
            textarea(id="content" name="content" rows="3" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="Write your comment here...")
          
          div(class="flex justify-end")
            button(type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded-lg") Post Comment
    else
      div(class="text-center py-8")
        p(class="text-gray-500 mb-4") Task not found
        a(href="/pm/projects" class="text-indigo-600 hover:text-indigo-800") Back to Projects

block scripts
  script.
    document.addEventListener('DOMContentLoaded', function() {
      const progressSlider = document.getElementById('progress');
      const progressValue = document.getElementById('progress-value');
      
      if (progressSlider && progressValue) {
        progressSlider.addEventListener('input', function() {
          progressValue.textContent = this.value + '%';
        });
      }
    }); 