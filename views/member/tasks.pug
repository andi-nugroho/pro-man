extends ../layout

block content
  div(class="container mx-auto px-4 py-6")
    h1(class="text-3xl font-bold mb-6") My Tasks
    
    if tasks && tasks.length > 0
      div(class="mb-6 border-b border-gray-200")
        div(class="flex flex-wrap -mb-px")
          button(class="tab-button mr-8 py-4 px-1 border-b-2 font-medium text-sm active" data-filter="all") 
            span(class="flex items-center")
              i(class="bx bx-list-ul mr-2")
              | All Tasks 
              span(class="ml-2 bg-gray-100 text-gray-600 py-0.5 px-2 rounded-full text-xs") #{tasks.length}
          
          button(class="tab-button mr-8 py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300" data-filter="pending") 
            span(class="flex items-center")
              i(class="bx bx-time mr-2")
              | Pending 
              span(class="ml-2 bg-yellow-100 text-yellow-800 py-0.5 px-2 rounded-full text-xs") #{pendingTasks.length}
          
          button(class="tab-button mr-8 py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300" data-filter="in_progress") 
            span(class="flex items-center")
              i(class="bx bx-loader mr-2")
              | In Progress 
              span(class="ml-2 bg-blue-100 text-blue-800 py-0.5 px-2 rounded-full text-xs") #{inProgressTasks.length}
          
          button(class="tab-button mr-8 py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300" data-filter="completed") 
            span(class="flex items-center")
              i(class="bx bx-check-circle mr-2")
              | Completed 
              span(class="ml-2 bg-green-100 text-green-800 py-0.5 px-2 rounded-full text-xs") #{completedTasks.length}
      
      div(class="task-container" id="all")
        div(class="space-y-4")
          each task in tasks
            div(class="task-card bg-white rounded-lg shadow-md p-4 border border-gray-100" data-status=task.status data-aos="fade-up")
              div(class="flex justify-between items-start")
                a(href=`/member/tasks/${task.id}` class="text-lg font-medium text-gray-900") #{task.name}
                if task.status === 'pending'
                  span(class="px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800") Pending
                else if task.status === 'in_progress'
                  span(class="px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800") In Progress
                else
                  span(class="px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800") Completed
              
              div(class="flex items-center mt-2")
                span(class="text-sm text-gray-500 mr-2") Project:
                a(href=`/member/projects/${task.project_id}` class="text-sm text-indigo-600") #{task.project_name}
              
              if task.description
                p(class="text-gray-600 text-sm mt-2") #{task.description.length > 150 ? task.description.substring(0, 150) + '...' : task.description}
              
              div(class="mt-3 flex flex-wrap gap-2")
                if task.priority === 'high'
                  span(class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800")
                    i(class="bx bx-error-circle mr-1")
                    | High Priority
                else if task.priority === 'medium'
                  span(class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800")
                    i(class="bx bx-error mr-1")
                    | Medium Priority
                
                if task.due_date
                  - const dueDate = new Date(task.due_date)
                  - const today = new Date()
                  - const isOverdue = dueDate < today && task.status !== 'completed'
                  span(class=`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${isOverdue ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`)
                    i(class=`bx ${isOverdue ? 'bx-alarm-exclamation' : 'bx-calendar'} mr-1`)
                    | Due: #{dueDate.toLocaleDateString()}
              
              div(class="mt-4")
                div(class="flex justify-between text-sm mb-1")
                  span Progress
                  span #{task.progress}%
                div(class="w-full bg-gray-200 rounded-full h-2")
                  div(class="bg-indigo-600 h-2 rounded-full" style=`width: ${task.progress}%`)
              
              div(class="mt-4 flex justify-end")
                a(href=`/member/tasks/${task.id}` class="inline-flex items-center text-indigo-600 hover:text-indigo-800")
                  i(class="bx bx-right-arrow-alt mr-1")
                  span View Details
    else
      div(class="bg-white rounded-lg shadow-md p-8 text-center" data-aos="fade-up")
        div(class="mb-4 text-gray-400")
          i(class="bx bx-task text-6xl")
        h3(class="text-xl font-medium text-gray-700 mb-2") No Tasks Found
        p(class="text-gray-500") You don't have any tasks assigned to you yet.

block scripts
  script.
    document.addEventListener('DOMContentLoaded', function() {
      const tabButtons = document.querySelectorAll('.tab-button');
      const taskCards = document.querySelectorAll('.task-card');
      
      tabButtons.forEach(button => {
        button.addEventListener('click', function() {
          tabButtons.forEach(btn => {
            btn.classList.remove('active', 'border-indigo-500', 'text-indigo-600');
            btn.classList.add('border-transparent', 'text-gray-500');
          });
          this.classList.add('active', 'border-indigo-500', 'text-indigo-600');
          this.classList.remove('border-transparent', 'text-gray-500');
          
          const filter = this.dataset.filter;
          taskCards.forEach(card => {
            if (filter === 'all' || card.dataset.status === filter) {
              card.style.display = 'block';
            } else {
              card.style.display = 'none';
            }
          });
        });
      });
      
      const activeTab = document.querySelector('.tab-button.active');
      if (activeTab) {
        activeTab.classList.add('border-indigo-500', 'text-indigo-600');
        activeTab.classList.remove('border-transparent', 'text-gray-500');
      }
    }); 